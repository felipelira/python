# !/usr/bin/env python

# Filter contigs based on the number of predicted genes present in each contig
# Designed to use with gene predicted using prodigal
# NODE_1_length_88242_cov_14.1408_ID_39651984_1 # 1 # 693 # -1 # ID=1_1;partial=10;start_type=ATG;rbs_motif=AAAAA;rbs_spacer=5bp;gc_cont=0.442
# contigs generated by Spades which follow this pattern:
# useful for nucleotide and amino acid sequences

# Usage: python filter_contigs.py [fasta file]

from collections import Counter
import sys
from Bio import SeqIO

data = SeqIO.parse(sys.argv[1],"fasta")

sequences = {}
genes_by_contig = {}
contigs = []
selected = {}

for line in data:
	name = line.id.split('_')[0] + "_" + line.id.split('_')[1] + "_"
	contigs.append(name)
	seq_name = line.id
	seq_rec = line.seq
	sequences[seq_name] = seq_rec
	genes_by_contig[name] = seq_name

counts = Counter(contigs)
for k, v in counts.items():
	if v >= 3:	# define the minimun value for the number of genes in the contig
		selected[k] = v
		print(k.strip()) # + "\t" + str(v))
